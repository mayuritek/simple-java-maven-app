# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  name: web1

steps:
# - task: JavaToolInstaller@0
#   displayName: 'Install JDK 1.17'
#   inputs:
#     versionSpec: '17'
#     jdkArchitectureOption: x64
#     jdkSourceOption: 'LocalDirectory'
#     jdkFile: '/home/ubuntu/jdk17.tar.gz'

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: '/home/ubuntu/jdk17.tar.gz'
    jdkDestinationDirectory: '/home/ubuntu/data'
    cleanDestinationDirectory: false
- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME_11_X64'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'  # Path to your pom.xml file
    goals: 'clean package'    # Maven goals to execute
    options: '-Xmx3072m'      # Additional Maven options if needed
    publishJUnitResults: true # Publish JUnit test results
    testResultsFiles: '**/surefire-reports/TEST-*.xml'


- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
